#+TITLE: Dec16
#+author: sergisi

#+begin_src plantuml :file img/message_passing.png :dir .
!define BASEPATH .
!include BASEPATH/global/stylesheet.puml

class User <<persistent>> {
    + email: Email
    + password: Password
}

note top of Exam : Date is on epoch format.
note bottom of Exam : id is given by django
class Exam <<persistent>> {
    + id: Int
    + description: Text
    + date: Date
    + location: String
}

class Grades <<persistent>> {
    + user: FK User
    + exam: FK Exam
    + grade: Double
}

Exam "0.." -- "1" User : isProfessor

Exam "0.." -- "1..*" User
(Exam, User) . Grades
#+end_src

#+attr_org: :width 300
#+RESULTS:

* Coses a preguntar
+ Sobre time i location (Exam)
+ Datasource serveix per extraure el driver de connexió del servidor, i
  aixi poder canviar de base de dades. En el nostre cas ja ho fa SQLAlchemy
  (ORM), que extrau aquest tipus de connexio de SQLs. L'abstracció de quina
  BD utilitzar ho farem desde l'~.env~.
+ Session es necessari? RMI qualsevol estudiant es pot connectar. Llavors,
  el Professor ha de dir els alumnes que es poden connectar? O mentre sigui
  un alumne es pot connectar al examen?

* Notes de desenvolupament
+ Canviar delete dels tests d'exam, només s'ha de poder esborrar
  si no té grades.

* Arquitectura
** Bàsics
+ Donar un identificador a l'exam
+ Guardar la descripció, la date/time i location
  ---
+ Poder borrar l'examen si no te cap nota
+ Modificar la descripció de l'examen
+ S'ha de poder buscar el contingut de l'examen amb l'id
  o la descripció parcial o sencera de l'examen.
+ s'ha de poder descargar la informació de l'examen per
  identificador o per llistant tots els examens

** Advanced
+ S'ha de poder posar notes a un examen.
+ S'ha de poder descarregar les notes d'un estudiant.
+ S'ha de poder guardar i extreure tota la informació dels
  examens / teus examens.
+ -- de la merda que utilitza
+ S'ha de poder gestionar l' accés de l'estudiant per id. (?)

** Integració
+ RMI ha de crear l'examen al ws.
+ Els estudiants han de validar l'id abans de començar
  l'examen. Els hi donarà detalls de la connexió amb el
  servidor.
+ S'ha de poder guardar les notes desde el WS.

~exam=exam_id~
#+NAME: Methods table. Preceeded by api at ngix level
|--------+---------------------------------+-----------------------------------------------------------------+---------------|
| Method | URL                             | What                                                            | Status code   |
|--------+---------------------------------+-----------------------------------------------------------------+---------------|
| get    | exam/                           | List d'exams                                                    | 200           |
| get    | exam/{exam}/                    | Detall de Exam (tot)                                            | 200, 404      |
| get    | exam/search?description={text}/ | Buscar descripció parcial.                                      | 200           |
| post   | exam/                           | Crea exam. pk no s'ha de donar.                                 | 201, 403, 401 |
| put    | exam/{exam}/                    | Modificar camps d'Exam (tots)                                   | 200, 403, 401 |
| patch  | exam/{exam}/                    | Partial update.                                                 | 200, 403, 401 |
| delete | exam/{exam}/                    | Deletes if professor and no grades                              | 204, 403, 401 |
|--------+---------------------------------+-----------------------------------------------------------------+---------------|
| post   | grades/                         | Penjar nota d'un examen.                                        | 201, 403, 401 |
| get    | grades/{user}/user/             | List totes les notes d'un estudiant.                            | 200           |
| get    | grades/                         | List all grades.                                                | 200           |
| get    | grades/{grade_id}               | Detail a grade.                                                 | 200, 404      |
| put    | grades/{grade_id}               | Updates a grade.                                                | 200, 403, 401 |
| patch  | grades/{grade_id}               | Partially updates a grade.                                      | 200, 403, 401 |
| delete | grades/{grade_id}               | Deletes a grade.                                                | 204, 403, 401 |
|--------+---------------------------------+-----------------------------------------------------------------+---------------|
| post   | auth/login/                     | Logins                                                          | 201, 403, 401 |
| get    | auth/logout/                    | Logouts                                                         | 200           |
| post   | auth/logout/                    | Logout                                                          | 201, 403, 401 |
| post   | auth/password/change/           | Password change.                                                | 201, 403, 401 |
| post   | auth/password/reset/            | Password reset by email confirmation. Needs Email configuration | 201, 403, 401 |
| post   | auth/password/reset/confirm/    | Password Confirmation                                           | 201, 403, 401 |
| post   | auth/registration/              | Register a new user.                                            | 201, 403, 401 |
| post   | auth/registration/verify-email  | Verifies email. Needs Email configuration                       | 201, 403, 401 |
| get    | auth/user/                      | Reads User. Needs authentication                                | 200           |
| put    | auth/user/                      | Updates User                                                    | 200, 403, 401 |
| patch  | auth/user/                      | Partial update.                                                 | 200, 403, 401 |
|--------+---------------------------------+-----------------------------------------------------------------+---------------|
| get    | user/{user}/                    | Gets user with pk.                                              | 200, 404      |
|--------+---------------------------------+-----------------------------------------------------------------+---------------|
